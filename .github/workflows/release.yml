name: Release

on:
  push:
    tags:
      - 'v*'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  release:
    name: Create Release
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'
          check-latest: true

      - name: Install Kustomize
        run: |
          make kustomize
          echo "${{ github.workspace }}/bin" >> $GITHUB_PATH

      - name: Install Controller-gen
        run: |
          make controller-gen
          echo "${{ github.workspace }}/bin" >> $GITHUB_PATH

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          platforms: linux/amd64,linux/arm64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Get version from tag
        id: get_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

      - name: Generate manifests
        run: |
          export IMG=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.get_version.outputs.VERSION }}
          make build-installer

      - name: Package Helm chart
        run: |
          mkdir -p _dist/charts
          VERSION=${GITHUB_REF#refs/tags/v}
          sed -i "s/^version:.*$/version: ${VERSION}/" charts/maintenance-window-manager/Chart.yaml
          sed -i "s/^appVersion:.*$/appVersion: \"${VERSION}\"/" charts/maintenance-window-manager/Chart.yaml
          sed -i "s|repository:.*$|repository: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}|" charts/maintenance-window-manager/values.yaml
          sed -i "s|tag:.*$|tag: ${{ steps.get_version.outputs.VERSION }}|" charts/maintenance-window-manager/values.yaml
          helm package charts/maintenance-window-manager --destination _dist/charts/

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          name: ${{ steps.get_version.outputs.VERSION }}
          draft: false
          prerelease: false
          files: |
            dist/install.yaml
            _dist/charts/*.tgz
          body: |
            # Release ${{ steps.get_version.outputs.VERSION }}
            
            ## How to install
            
            ### Using Helm
            
            ```bash
            helm repo add maintenance-window-manager https://github.com/${{ github.repository }}/releases/download/${{ steps.get_version.outputs.VERSION }}
            helm install maintenance-window-manager maintenance-window-manager/maintenance-window-manager
            ```
            
            ### Using kubectl
            
            ```bash
            kubectl apply -f https://github.com/${{ github.repository }}/releases/download/${{ steps.get_version.outputs.VERSION }}/install.yaml
            ```
            
            ## Docker image
            
            ```
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.get_version.outputs.VERSION }}
            ``` 